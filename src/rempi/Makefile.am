SUBDIRS =
AM_CFLAGS = -fPIC -g -Wall -pthread -std=c++0x -I$(clmpi_DIR)/include/ -I$(libz_a_INCLUDE) 
AM_CXXFLAGS = $(AM_CFLAGS)

rempi_SOURCES =  \
		rempi_pmpi.cpp \
		rempi_err.cpp \
		rempi_mem.cpp \
		rempi_util.cpp \
		rempi_compression_util.cpp \
		rempi_config.cpp \
                rempi_re.cpp \
	        rempi_sig_handler.cpp \
	        rempi_status.cpp \
	        rempi_mf.cpp \
		rempi_msg_buffer.cpp \
		rempi_recorder.cpp \
		rempi_recorder_cdc.cpp \
		rempi_recorder_rep.cpp \
		rempi_mpi_init.cpp \
		rempi_request_mg.cpp \
		rempi_event_list.cpp \
	     	rempi_event.cpp \
		rempi_cp.cpp \
		rempi_clock.cpp \
	     	rempi_clock_delta_compression.cpp \
		rempi_encoder.cpp \
		rempi_encoder_basic.cpp \
		rempi_encoder_cdc.cpp \
		rempi_encoder_rep.cpp \
		rempi_thread.cpp \
		rempi_io_thread.cpp \
		rempi_stm.cpp \
		rempi_mutex.cpp

lib_LTLIBRARIES = librempi.la
librempi_la_SOURCES  = $(rempi_SOURCES)
librempi_la_LIBADD =  $(libz_a_LIB)
librempi_la_CFLAGS = -lz -lstdc++ -lintlc
librempi_la_CPPFLAGS = -DREMPI_LITE
librempi_la_LDFLAGS = -version-info @LIB_CURRENT@:@LIB_REVISION@:@LIB_AGE@ -L/opt/ibm/xlC/13.1.5/lib 

if ENABLE_CDC

librempix_la_LIBRARY = librempix.la
librempix_la_LDFLAGS = -version-info @LIB_CURRENT@:@LIB_REVISION@:@LIB_AGE@
lib_LTLIBRARIES += $(librempix_la_LIBRARY) 
# ===== librempix ===== 

librempix_la_SOURCES = $(rempi_SOURCES)

# user-defined custom name             
librempix_la_OBJECT    = ./librempix_la-librempix.lo
librempix_la_OBJECT_O  = $(librempix_la_OBJECT:%.lo=%.o)
librempix_la_OBJECTS_O = $(librempix_la_OBJECTS:%.lo=%.o)
librempix_la_STACK_PMPI_OBJECT_O = ./librempix.o
librempix_la_LIBS_OBJECT_O = $(librempix_la_OBJECT:%.lo=.libs/%.o)
librempix_la_LIBS_OBJECTS_O  = $(librempix_la_OBJECTS:%.lo=.libs/%.o)
librempix_la_LIBS_STACK_PMPI_OBJECT_O = ./.libs/librempix.o

libclmpi_o_OBJECT = $(clmpi_DIR)/lib/libclmpi.o
libclmpi_o_LIB_OBJECT = $(clmpi_DIR)/lib/.libs/libclmpi.o


# ===== Object file installation =====                     
install_pic_libdir = $(libdir)/.libs
dist_install_pic_lib_SCRIPTS = $(librempix_la_LIBS_STACK_PMPI_OBJECT_O) 
install_non_pic_libdir = $(libdir)
dist_install_non_pic_lib_SCRIPTS = $(librempix_la_STACK_PMPI_OBJECT_O) 

$(librempix_la_STACK_PMPI_OBJECT_O):
$(librempix_la_LIBS_STACK_PMPI_OBJECT_O):

$(librempix_la_OBJECT_O): $(librempix_la_OBJECTS_O)
	ld -o $(librempix_la_OBJECT_O) -r $(librempix_la_OBJECTS_O)

$(librempix_la_LIBS_OBJECT_O): $(librempix_la_LIBS_OBJECTS_O)
	ld -o $(librempix_la_LIBS_OBJECT_O) -r $(librempix_la_LIBS_OBJECTS_O)

$(librempix_la_LIBRARY): $(librempix_la_OBJECTS) $(librempix_la_DEPENDENCIES) $(librempix_la_OBJECT_O) $(librempix_la_LIBS_OBJECT_O)
	$(stack_pmpi_DIR)/stack_pmpi $(librempix_la_STACK_PMPI_OBJECT_O) $(librempix_la_OBJECT_O) $(libclmpi_o_OBJECT)
	$(stack_pmpi_DIR)/stack_pmpi $(librempix_la_LIBS_STACK_PMPI_OBJECT_O) $(librempix_la_LIBS_OBJECT_O) $(libclmpi_o_LIB_OBJECT)
	echo "# Generated by `$(abs_top_builddir)/libtool --version | head -n 1`" >  $(librempix_la_OBJECT)
	echo "pic_object='$(librempix_la_LIBS_STACK_PMPI_OBJECT_O)'" >> $(librempix_la_OBJECT)
	echo "non_pic_object='$(librempix_la_STACK_PMPI_OBJECT_O)'" >> $(librempix_la_OBJECT)
	$(CXXLINK) -rpath $(libdir) $(librempix_la_OBJECT) $(librempix_la_LIBADD) $(LIBS) $(librempix_la_LDFLAGS) 
endif

# if ENABLE_CDC
# librempix_a_LIB = librempix.a
# lib_LIBRARIES = $(librempix_a_LIB)
# librempix_so_LIB = librempix.so
# librempix_a_SOURCES = $(rempi_SOURCES)
# librempix_a_CFLAGS = -lz -lstdc++ -lintlc
# librempix_a_LD_OBJECT = librempix.ar.o
# librempix_a_STACK_PMPI_OBJECT = librempix.stack_pmpi.o
# clmpi_o_OBJECT = $(clmpi_DIR)/lib/libclmpi.o
# clmpi_o_LIB_OBJECT = $(clmpi_DIR)/lib/.libs/libclmpi.o
# workaround_libdir = $(libdir)
# dist_workaround_lib_SCRIPTS = $(librempix_so_LIB)


# $(librempix_a_LIB): $(librempix_a_OBJECTS) $(clmpi_o_OBJECT)
# 	ld -o $(librempix_a_LD_OBJECT) -r $(librempix_a_OBJECTS) $(libz_a_LIB)
# 	$(stack_pmpi_DIR)/stack_pmpi $(librempix_a_STACK_PMPI_OBJECT) $(librempix_a_LD_OBJECT) $(clmpi_o_OBJECT)
# 	ar cr $@ $(librempix_a_STACK_PMPI_OBJECT)
# 	ranlib $@

# $(librempix_so_LIB): $(librempix_a_LIB)
# 	$(MPICC) $(AM_CXXFLAGS) $(librempix_a_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) -shared -o $@ $(librempix_a_STACK_PMPI_OBJECT)

# all-local: $(librempix_a_LIB) $(librempix_so_LIB)

# clean-local:
# 	-rm -f $(librempix_a_LIB) $(librempix_so_LIB) $(librempix_a_OBJECTS) $(librempix_a_LD_OBJECT) $(librempix_a_STACK_PMPI_OBJECT)

# endif
